/*
  $bg-color: background color of the element.
  $color: colour of the outline.
  Sets the focus outline inside the element, by using multiple box shadows
*/
@mixin lg-inner-focus-outline($bg-color, $color: var(--color-white)) {
  outline: 0;
  box-shadow: inset 0 0 0 0.25rem $bg-color, inset 0 0 0 0.3rem $color;
}

@mixin lg-outer-focus-outline($bg-color: var(--default-focus-color)) {
  outline: 0;
  box-shadow: 0 0 0 0.25rem $bg-color;
}

@mixin lg-box-shadow-focus($bg-color: var(--default-focus-color)) {
  outline: 0;
  box-shadow: 0 0 0 var(--link-underline-radius) $bg-color;
}

@mixin lg-bg-focus(
  $bg-color: var(--link-bg-focus-color),
  $color: var(--link-focus-color)
) {
  background: $bg-color;
  color: $color;
  outline: var(--link-focus-outline) solid $bg-color;
}

@mixin lg-underline-hover(
  $underline-color: var(--default-underline-hover-color)
) {
  border-bottom: none;
  box-shadow: inset 0 var(--link-underline-length-above) 0 0 $underline-color,
    0 var(--link-underline-length-below) 0 0 $underline-color;
}

@mixin lg-underline($underline-color: var(--default-underline-color)) {
  border-bottom: var(--link-border-width) solid $underline-color;
}

@mixin lg-underline-active(
  $underline-color: var(--default-underline-active-color)
) {
  border-bottom: none;
  box-shadow: inset 0 var(--link-underline-length-above) 0 0 $underline-color,
    0 var(--link-underline-length-below) 0 0 $underline-color;
}

@mixin lg-font-size($size) {
  font-size: var(--text-fs-#{$size}-size);
  line-height: var(--text-fs-#{$size}-line-height);
  font-weight: var(--text-fs-#{$size}-weight);
}

@mixin lg-visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: auto;
  margin: 0;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 0.0625em;
  white-space: nowrap;
}

$breakpoints: (
  'sm': 20rem,
  'md': 48rem,
  'lg': 64rem,
  'xl': 80rem,
  'xxl': 90rem
) !default;

/*
  $breakpoint: string value for the breakpoint screen size.
  Creates a mixin which allows breakpoints to be added to css blocks
*/
@mixin lg-breakpoint($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
      + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

@mixin lg-variant($variant: 'generic') {
  background-color: var(--#{$variant}-bg-color);
  color: var(--#{$variant}-color);

  a {
    color: var(--#{$variant}-link-color);
    padding: var(--link-underline-space);
    @include lg-underline(
      $underline-color: var(--#{$variant}-link-underline-color)
    );

    &:visited {
      color: var(--link-visited-color);
      border-bottom: var(--link-border-width) solid
        var(--link-underline-visited-color);
    }

    &:visited:hover {
      color: var(--#{$variant}-link-hover-color);
      @include lg-underline-hover(
        $underline-color: var(--#{$variant}-link-underline-hover-color)
      );
    }

    &:hover {
      @include lg-underline-hover(
        $underline-color: var(--#{$variant}-link-underline-hover-color)
      );
    }

    &:active {
      background: var(--default-link-bg-active-color);
      @include lg-underline-active(
        $underline-color: var(--#{$variant}-link-underline-active-color)
      );
    }

    &:focus {
      padding: 0;
      margin: var(--link-underline-space);
      box-shadow: none;
    }

    &:focus,
    &:focus:visited,
    &:focus:active {
      border-bottom: none;
      @include lg-bg-focus(
        $bg-color: var(--#{$variant}-link-bg-focus-color),
        $color: var(--#{$variant}-link-focus-color)
      );
    }

    &:focus:active {
      @include lg-box-shadow-focus(
        $bg-color: var(--#{$variant}-link-bg-focus-color)
      );
    }
  }
}
